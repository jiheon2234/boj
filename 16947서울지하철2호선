import sys
input=sys.stdin.readline
sys.setrecursionlimit(10**7)
from collections import deque


def dfs(i,last_i,start): # 순환확인 #현재위치,이전위치,시작위치
    global flag
    for j in arr[i]:
        if j==start and j!= last_i:
            flag=True
            return
        if not visited[j]:
            visited[j]=True
            dfs(j,i,start)
            if flag:
                return
            visited[j]=False
    return

  
            
s=deque()

def bfs(i):
    s.append((i,0))

    while s:
        tmp,v=s.popleft()
        for i in arr[tmp]:
            if not visited[i]:
                visited[i]=True
               
                s.append((i,v+1))
                answer[i]=v+1

    

            
                


    


n=int(input())
arr=[[]for _ in range(n+1)]
visited=[False for _ in range(n+1)]
visited1=[False for _ in range(n+1)]

for _ in range(n):
    a,b=map(int,input().split())
    arr[a].append(b)
    arr[b].append(a)
    #입력

flag=False
for i in range(1,n+1):
    visited[i]=True
    dfs(i,None,i)
    if flag:
        break
    else:
        visited[i]=False

answer=[0 for _ in range(n+1)]
for i in range(1,n+1):
    if visited[i] and len(arr[i])>2:
        bfs(i)

print(* answer[1:])

        
